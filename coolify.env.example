# =============================================================================
# ZIPT URL SHORTENER - COOLIFY ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your values
# This configuration matches your actual environment setup

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
# Main domain for the web interface (e.g., zipt.example.com)
DOMAIN=your-domain.com

# Short domain for redirects (can be same as DOMAIN)
SHORT_DOMAIN=https://your-domain.com

# Links domain (without protocol)
LINKS_DOMAIN=your-domain.com

# Email for Let's Encrypt SSL certificates
ACME_EMAIL=admin@example.com

# =============================================================================
# APPLICATION URLS
# =============================================================================
# Backend API URL
BACKEND_URL=https://your-domain.com/

# Frontend URL
FRONTEND_URL=https://your-domain.com/

# =============================================================================
# NEXT.JS FRONTEND CONFIGURATION
# =============================================================================
# Server API endpoint for frontend
SERVER_API_ENDPOINT=https://your-domain.com/api/v1

# Public API endpoint for frontend
NEXT_PUBLIC_SERVER_API_ENDPOINT=https://your-domain.com/api/v1

# Public links domain for frontend
NEXT_PUBLIC_LINKS_DOMAIN=your-domain.com

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database host (use 'database' for internal Docker networking)
DATABASE_HOST=database

# Database credentials (Coolify can auto-generate these)
DATABASE_USER=postgres
DATABASE_PASSWORD=${DATABASE_PASSWORD}
DATABASE_DBNAME=zipt
DATABASE_PORT=5432
DATABASE_SSLMODE=disable

# Database connection pool settings
DATABASE_MAX_IDLE_CONNS=10
DATABASE_MAX_OPEN_CONNS=100
DATABASE_CONN_MAX_LIFETIME=30



# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Secret Key (Coolify can auto-generate this)
JWT_SECRET_KEY=${JWT_SECRET_KEY}

# Cookie configuration
COOKIE_DOMAIN=your-domain.com
COOKIE_PATH=/
COOKIE_REFRESH_TOKEN_EXPIRES=60
COOKIE_ACCESS_TOKEN_EXPIRES=15

# Argon2 password hashing configuration
ARGON2_MEMORY=65536
ARGON2_ITERATIONS=20
ARGON2_PARALLELISM=4

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Application version
VERSION=1

# Machine ID for distributed systems
MACHINE_ID=1

# Gin mode (release for production, debug for development)
GIN_MODE=release

# Server port
PORT=8080

# =============================================================================
# COOLIFY SPECIFIC NOTES
# =============================================================================
# 1. Coolify can auto-generate DATABASE_PASSWORD and JWT_SECRET_KEY
# 2. Set DATABASE_HOST=database for internal Docker networking
# 3. Update all domain references to your actual domain
# 4. For public database access, Coolify can expose the database port
# 5. Redis is optional and can be removed if not needed

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================
# Before deploying to production:
# [ ] Replace all domain placeholders with your actual domain
# [ ] Let Coolify auto-generate secure passwords
# [ ] Set GIN_MODE=release for production
# [ ] Configure DNS records for your domain
# [ ] Test the application thoroughly 