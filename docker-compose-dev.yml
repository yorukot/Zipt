networks:
  dev:
    driver: bridge

services:
  # Backend
  backend:
    image: cosmtrek/air:latest
    volumes:
      - ./backend:/app
    working_dir: /app
    command: sh -c "air"
    environment:
      - GIN_MODE=debug
      - PORT=8080

      - VERSION=1 # Developing
      - MACHINE_ID=1
      - BACKEND_URL=http://localhost:8080/
      - FRONTEND_URL=http://localhost:8080/
      - SHORT_DOMAIN=http://localhost:3001

      - DATABASE_TYPE=postgres
      - DATABASE_HOST=timescaledb
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=p0stgr3s
      - DATABASE_DBNAME=zipt
      - DATABASE_PORT=5432
      - DATABASE_SSLMODE=disable

      - DATABASE_MAX_IDLE_CONNS=10
      - DATABASE_MAX_OPEN_CONNS=100
      - DATABASE_CONN_MAX_LIFETIME=30

      - ARGON2_MEMORY=65536
      - ARGON2_ITERATIONS=20
      - ARGON2_PARALLELISM=4

      - JWT_SECRET_KEY=change_me_in_production
      - COOKIE_DOMAIN=localhost
      - COOKIE_PATH=/
      - COOKIE_REFRESH_TOKEN_EXPIRES=60
      - COOKIE_ACCESS_TOKEN_EXPIRES=15
    ports:
      - "8080:8080"
    networks:
      - dev
    depends_on:
      - timescaledb
    logging:
      options:
        max-size: "100kb"
        max-file: "1"

  # Frontend website
  website:
    image: node:22
    volumes:
      - ./website:/app
    working_dir: /app
    command: >
      sh -c "npm install -g pnpm &&
             pnpm install &&
             pnpm dev"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8080/api/v1
      - NEXT_PUBLIC_API_SHORT_DOMAIN=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - dev
    logging:
      options:
        max-size: "100kb"
        max-file: "1"

  caddy:
    image: caddy:2.7-alpine
    ports:
      - "2000:2000"
      - "3001:3001"
    volumes:
      - type: bind
        source: ./docker/caddy/Caddyfile.dev
        target: /etc/caddy/Caddyfile
        read_only: true
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    depends_on:
      - website
      - backend
    networks:
      - dev

  timescaledb:
    image: timescale/timescaledb:latest-pg17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=p0stgr3s
      - POSTGRES_DB=zipt
    ports:
      - "5432:5432"
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    networks:
      - dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  timescaledb-data:
  caddy_data:
  caddy_config:
