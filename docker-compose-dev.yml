networks:
  app-network:
    driver: bridge

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    environment:
      - GIN_MODE=debug
      - PORT=8080

      - VERSION=1 # Developing
      - MACHINE_ID=1
      - BACKEND_URL=http://localhost:8080/
      - FRONTEND_URL=http://localhost:8080/

      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=p0stgr3s
      - DATABASE_DBNAME=zipt
      - DATABASE_PORT=5432
      - DATABASE_SSLMODE=disable

      - DATABASE_MAX_IDLE_CONNS=10
      - DATABASE_MAX_OPEN_CONNS=100
      - DATABASE_CONN_MAX_LIFETIME=30

      - ARGON2_MEMORY=65536
      - ARGON2_ITERATIONS=20
      - ARGON2_PARALLELISM=4

      - JWT_SECRET_KEY=change_me_in_production
      - COOKIE_DOMAIN=localhost
      - COOKIE_PATH=/
      - COOKIE_REFRESH_TOKEN_EXPIRES=60
      - COOKIE_ACCESS_TOKEN_EXPIRES=15
    networks:
      - app-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "echo", "healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Frontend website
  website:
    build:
      context: ./website
      dockerfile: ../docker/Dockerfile.website
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8080/api
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Caddy web server with automatic HTTPS
  caddy:
    image: caddy:2.7-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./docker/caddy/Caddyfile
        target: /etc/caddy/Caddyfile
        read_only: true
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    depends_on:
      - website
      - backend
    networks:
      - app-network

  # Database
  postgres:
    image: postgres:17-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p0stgr3s
      POSTGRES_DB: zipt  # Explicitly set the default database
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist database data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:  # Data volume for PostgreSQL
  caddy_data:     # Stores certificates
  caddy_config:   # Stores Caddy configuration 