networks:
  app-network:
    driver: bridge

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    environment:
      - GIN_MODE=debug
      - PORT=8080

      - VERSION=${VERSION:-1} # Developing
      - MACHINE_ID=${MACHINE_ID:-1}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:8080/}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8080/}
      - SHORT_DOMAIN=${SHORT_DOMAIN:-http://localhost:8080/}

      - DATABASE_TYPE=${DATABASE_TYPE:-postgres}
      - DATABASE_HOST=${DATABASE_HOST:-postgres}
      - DATABASE_USER=${DATABASE_USER:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-p0stgr3s}
      - DATABASE_DBNAME=${DATABASE_DBNAME:-zipt}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_SSLMODE=${DATABASE_SSLMODE:-disable}

      - DATABASE_MAX_IDLE_CONNS=${DATABASE_MAX_IDLE_CONNS:-10}
      - DATABASE_MAX_OPEN_CONNS=${DATABASE_MAX_OPEN_CONNS:-100}
      - DATABASE_CONN_MAX_LIFETIME=${DATABASE_CONN_MAX_LIFETIME:-30}

      - ARGON2_MEMORY=${ARGON2_MEMORY:-65536}
      - ARGON2_ITERATIONS=${ARGON2_ITERATIONS:-20}
      - ARGON2_PARALLELISM=${ARGON2_PARALLELISM:-4}

      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change_me_in_production}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN:-localhost}
      - COOKIE_PATH=${COOKIE_PATH:-/}
      - COOKIE_REFRESH_TOKEN_EXPIRES=${COOKIE_REFRESH_TOKEN_EXPIRES:-60}
      - COOKIE_ACCESS_TOKEN_EXPIRES=${COOKIE_ACCESS_TOKEN_EXPIRES:-15}
    networks:
      - app-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "echo", "healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Frontend website
  website:
    build:
      context: ./website
      dockerfile: ../docker/Dockerfile.website
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8080/api/v1}
      - NEXT_PUBLIC_API_SHORT_DOMAIN=${NEXT_PUBLIC_API_SHORT_DOMAIN:-http://localhost:8080}
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Database
  postgres:
    image: postgres:17-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p0stgr3s
      POSTGRES_DB: zipt  # Explicitly set the default database
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist database data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:  # Data volume for PostgreSQL
