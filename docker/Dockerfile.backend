# Build stage
FROM golang:1.21-alpine AS builder

# Install dependencies
RUN apk add --no-cache git make

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the application
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags="-s -w" -o main .

# Final stage
FROM alpine:3.19

# Install dependencies for SSL/TLS (for outgoing connections)
RUN apk add --no-cache ca-certificates tzdata && update-ca-certificates

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /app/main .

# Copy config files (adjust as needed)
COPY --from=builder /app/.env.production ./.env
COPY --from=builder /app/static ./static

# Set ownership
RUN chown -R appuser:appgroup /app

# Use non-root user
USER appuser

# Expose the port
EXPOSE 8080

# Command to run
CMD ["./main"] 