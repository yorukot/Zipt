# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache gcc musl-dev git

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum files from backend directory
COPY backend/go.mod backend/go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code from backend directory
COPY backend/ ./

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -o main .
RUN ls -la

# Runtime stage
FROM alpine:3.18

# Set working directory
WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata sqlite wget

# Copy binary from build stage
COPY --from=builder /app/main /app/main
RUN chmod +x /app/main

# Create directory for SQLite database (if used)
RUN mkdir -p /app/data

# Expose the application port
EXPOSE 8080

# Run the application
CMD ["/app/main"]
