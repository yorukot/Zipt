networks:
  dev:
    driver: bridge

services:
  # Backend
  backend:
    image: cosmtrek/air:latest
    volumes:
      - ../:/app
    working_dir: /app
    command: sh -c "air"
    ports:
      - "8080:8080"
    networks:
      - dev
    depends_on:
      - postgres
    logging:
      options:
        max-size: "100kb"
        max-file: "1"

  # Frontend website
  website:
    image: node:22
    volumes:
      - ../website:/app
    working_dir: /app
    command: >
      sh -c "npm install -g pnpm &&
             pnpm install &&
             pnpm dev"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - dev
    logging:
      options:
        max-size: "100kb"
        max-file: "1"

  # Nginx for reverse proxy
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    depends_on:
      - website
      - backend
    networks:
      - dev
    logging:
      options:
        max-size: "100kb"
        max-file: "1"
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=gin-template
      - POSTGRES_PASSWORD=xxxxxxxxxx
      - POSTGRES_DB=gin-template
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gin-template"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - dev
    restart: unless-stopped
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  redis-data:
